#!/bin/bash

echo "üé® Auto Blocks - Instala√ß√£o Manual"
echo "=================================="
echo ""

# Verificar se estamos em um tema Sage/Acorn
if [ ! -f "style.css" ] || [ ! -f "functions.php" ] || [ ! -d "app" ]; then
    echo "‚ùå Este n√£o parece ser um diret√≥rio de tema Sage/Acorn v√°lido."
    echo "Certifique-se de estar no diret√≥rio raiz do tema (onde est√£o style.css e functions.php)."
    exit 1
fi

echo "‚úÖ Tema Sage/Acorn detectado!"

# Encontrar o diret√≥rio do pacote
PACKAGE_DIR=""
for path in "vendor/juliojar4/auto-blocks" "../vendor/juliojar4/auto-blocks" "../../vendor/juliojar4/auto-blocks" "../../../vendor/juliojar4/auto-blocks"; do
    if [ -d "$path" ]; then
        PACKAGE_DIR=$(realpath "$path")
        break
    fi
done

if [ -z "$PACKAGE_DIR" ]; then
    echo "‚ùå Pacote auto-blocks n√£o encontrado no vendor!"
    echo "Execute: composer require juliojar4/auto-blocks:dev-master"
    exit 1
fi

echo "‚úÖ Pacote encontrado em: $PACKAGE_DIR"

# Criar diret√≥rios necess√°rios
echo ""
echo "üìÅ Criando diret√≥rios..."
mkdir -p resources/blocks
mkdir -p resources/views/blocks
mkdir -p public/build
mkdir -p app/Blocks
mkdir -p app/Console/Commands

echo "‚úÖ Diret√≥rios criados!"

# Copiar arquivos
echo ""
echo "üìÑ Copiando arquivos..."

if [ -f "$PACKAGE_DIR/stubs/BlockManager.php" ]; then
    cp "$PACKAGE_DIR/stubs/BlockManager.php" "app/Blocks/BlockManager.php"
    echo "‚úÖ BlockManager.php copiado"
else
    echo "‚ö†Ô∏è  BlockManager.php n√£o encontrado"
fi

if [ -f "$PACKAGE_DIR/stubs/MakeBlockCommand.php" ]; then
    cp "$PACKAGE_DIR/stubs/MakeBlockCommand.php" "app/Console/Commands/MakeBlockCommand.php"
    echo "‚úÖ MakeBlockCommand.php copiado"
else
    echo "‚ö†Ô∏è  MakeBlockCommand.php n√£o encontrado"
fi

if [ -f "$PACKAGE_DIR/stubs/SyncBlocksCommand.php" ]; then
    cp "$PACKAGE_DIR/stubs/SyncBlocksCommand.php" "app/Console/Commands/SyncBlocksCommand.php"
    echo "‚úÖ SyncBlocksCommand.php copiado"
else
    echo "‚ö†Ô∏è  SyncBlocksCommand.php n√£o encontrado"
fi

if [ -f "$PACKAGE_DIR/stubs/blocks.js" ]; then
    cp "$PACKAGE_DIR/stubs/blocks.js" "resources/js/blocks.js"
    echo "‚úÖ blocks.js copiado"
else
    echo "‚ö†Ô∏è  blocks.js n√£o encontrado"
fi

if [ -f "$PACKAGE_DIR/stubs/blocks.css" ]; then
    cp "$PACKAGE_DIR/stubs/blocks.css" "resources/css/blocks.css"
    echo "‚úÖ blocks.css copiado"
else
    echo "‚ö†Ô∏è  blocks.css n√£o encontrado"
fi

if [ -f "$PACKAGE_DIR/stubs/vite.config.js" ]; then
    cp "$PACKAGE_DIR/stubs/vite.config.js" "vite.config.js"
    echo "‚úÖ vite.config.js copiado"
else
    echo "‚ö†Ô∏è  vite.config.js n√£o encontrado"
fi

if [ -f "$PACKAGE_DIR/stubs/blocks.php" ]; then
    cp "$PACKAGE_DIR/stubs/blocks.php" "resources/blocks.php"
    echo "‚úÖ blocks.php copiado"
else
    echo "‚ö†Ô∏è  blocks.php n√£o encontrado"
fi

echo ""
echo "‚úÖ Auto Blocks instalado com sucesso!"
echo ""
echo "üìã Pr√≥ximos passos:"
echo ""
echo "üîß Para ambientes com LANDO:"
echo "  1. yarn install"
echo "  2. yarn build"
echo "  3. lando wp acorn make:block meu-primeiro-bloco --with-js --with-css"
echo "  4. yarn build"
echo "  5. Verificar no editor WordPress"
echo ""
echo "üîß Para ambientes SEM LANDO:"
echo "  1. yarn install"
echo "  2. yarn build" 
echo "  3. wp acorn make:block meu-primeiro-bloco --with-js --with-css"
echo "  4. yarn build"
echo "  5. Verificar no editor WordPress"
echo ""
echo "‚ö†Ô∏è  IMPORTANTE: NUNCA use 'php artisan' - use sempre 'lando wp acorn' ou 'wp acorn'"
echo ""
